/*    */ package jd.core.test;
/*    */ 
/*    */ import java.lang.reflect.Method;
/*    */ import java.util.ArrayList;
/*    */ import java.util.HashMap;
/*    */ import java.util.Iterator;
/*    */ import java.util.List;
/*    */ import java.util.Map;
/*    */ 
/*    */ 
/*    */ public class ForEachReconstruct
/*    */ {
/*    */   void forEachInCatch()
/*    */   {
/*    */     try
/*    */     {
/* 17 */       System.out.println("try");
/*    */     } catch (Exception e) {
/* 19 */       for (StackTraceElement stackTraceElement : e.getStackTrace()) {
/* 20 */         System.out.println(stackTraceElement);
/*    */       }
/*    */     }
/*    */   }
/*    */   
/*    */ 
/*    */ 
/*    */   public static void main(String[] args)
/*    */   {
/* 29 */     for (Object arg : args) {
/* 30 */       System.out.println(arg);
/*    */     }
/*    */   }
/*    */   
/*    */ 
/*    */ 
/*    */   void enhancedForEachStatement(Integer... ints)
/*    */   {
/* 38 */     for (Integer anInt : ints) {
/* 39 */       System.out.println(anInt);
/*    */     }
/* 41 */     List<Integer> intList = new ArrayList<>();
/* 42 */     if (ints != null) {
/* 43 */       for (int theInt : ints) {
/* 44 */         intList.add(Integer.valueOf(theInt));
/*    */       }
/*    */     }
/*    */   }
/*    */   
/*    */ 
/*    */ 
/*    */   void emptyForEach(Class c)
/*    */   {
/* 53 */     Method[] methods = c.getMethods();
/* 54 */     Map m = new HashMap<>();
/* 55 */     for (Method method : methods) {
/* 56 */       StringBuilder sb = new StringBuilder();
/* 57 */       sb.append(method.getName());
/* 58 */       if (method.getReturnType().equals(Void.TYPE)) {
/* 59 */         sb.append("");
/*    */       }
/* 61 */       m.put(method.getName(), sb.toString());
/*    */     }
/* 63 */     for (Iterator iter = m.values().iterator(); iter.hasNext();) {}
/*    */   }
/*    */ }
